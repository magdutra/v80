   Hopefully you have now seen most of the 'softumentation'regarding VTOS 3.0.  As you can now see, VTOS is designed tobe device independent.  That is, if you have a program whichis written to produce a certain printed output, and you findthat your throughput needs have increased to the point thatnew hardware is required, or your printer breaks, or you justdon't want to waste paper on test runs; then device the VTOSdevice independnt I/O structure will allow you to convert allof your programs with just one system command.  Example? trythis one:  your BASIC program normally produces a printedpiece of output via LPRINT commands,  with the command:        ROUTE *PR TO *DOYour output will now be redirected to the display!    The following will enable you to receive remote inputover the comm line while still retaining local controlwithout requiring a special program just to do the job:        SET *CL TO RS232 (BAUD=300)        LINK *DO TO *CL        LINK *KI TO *CL    In general, file specifications and logical devicespecifications can be used interchangably.  Just rememberthat device specifications are two characters proceededby an asterisk.    Another example is to place printer output on disk:        ROUTE *PR TO filespec    Also remember that logical devices need to be closedwhen you are through using them.     A logical JOBLOG device is present in the system butis normally set to 'NIL'.  This logical device, whenenabled, will contain a 'TIME-STAMP' of all commands,errors, etc. encountered.  It is very useful for longunattended operations.  Try:        ROUTE *JL TO *PR     If, by chance, you forget to close a disk drive's door,or have other disk timeout related problems, a shifted'BREAK' key will re-start the drive which last timed out.  