>'CAPTURE/TXT>N58/w68/p80/a4>Z99/i0/R10/T11/z>Z98/i0/R5/T6/z>H1/n1>i0/hINSTRUCTIONS FOR USING CAPTURE/CMD - Page #====================================================================>X>F1>i0===== PUBLIC DOMAIN SOFTWARE for NEWDOS86 by W.S. & D.S. SANDS =====>X>T6 >t/U/BÕÓÉÎÇ ÃÁÐÔÕÒÅ¯ÃÍÄ>Uoff/Boff>toffThis program arose from a request from John Hildyard for a mechanism that would let him get the output of DAY/CMD into a form usable for manipulation within a BASIC program.While you could use DEVICE to create a new logical device and then route the video output to the file that way.  It seemed a sledge-hammer and peanut exercise.  So I wrote CAPTURE/CMD.  It is a Pseudo-System File and it will intercept all characters being sent to the video and store them in a string array.Every time a CHR(13) is sent to the screen, the next array variable/element is used to store the next line of output.  Also if the variable/line length will exceed 255 characters, then the next variable/element is selected.  The CHR$(13)'s are not stored.The lines are stored starting in element 0 of the specified array.  If only a single line is to be captured, then a simple string variable may be used. Syntax is:- CMD"CAPTURE [+] [(start [,end] )] var$(max),doscmd"  The optional  +  forces echo of characters to the display.  The optional (start,end) allows extraction of particular   parts of the output.  var$ is the name of the string array into which you want the   output to be stored.  The array must be singly dimensioned.   The array subscript is the maximum element of the array.   This value determines the maximum number of lines you can   capture.  This value can be a string literal or a BASIC   variable name.  var$(max) MUST BE terminated with a comma ','. doscmd can be any valid command legal under mini-dos.  i.e. DIR, FREE, SYSTEM or PDRIVE are valid DOS commands, DAY, LOGON etc  as PSFiles are also legal under Mini-Dos. COPY, SUPERZAP, DIRCHECK are not legal under Mini-Dos and will cause the program to abort with an ILLEGAL DOS FUNCTION error. If you have been doing a lot of string processing, it may be worthwhile to force a string space garbage collection by doing an A%=FRE(A$) before doing the string capture.  This will ensure that all free string space can be used by the routine. ERRORS that may arise:- since we can let BASIC handle these errors, the error reporting is identical to standard BASIC. OUT OF STRING SPACE == there must be at least 2 bytes                         free in string space. TYPE MISMATCH       == the variable must be a string variable SYNTAX ERROR etc       standard problems with evaluating a                         routine.>fThe following BASIC program will give a simple demonstration ofhow it works.10 CLS:CLEAR 10000:DEFINT A-Z:MX=2320 DIM A$(MX)30 WAIT "Hit <<enter>> to do the CAPTURE"+CHR$(13);FOR CHR$(13)40 CMD"CAPTURE + a$(MX),DIR"50 WAIT "Hit <<enter>> to print out the array"; FOR CHR$(13)60 PRINT70 J=-1:DO:INC J80 PRINT A$(J)90 UNTIL J=>MX OR A$(J)=""Don't forget to give CAPTURE/CMD the PSF attribute with:-  ATTRIB,CAPTURE/CMD,PSF=YIf this isn't done, you will find your system crashes whenever you try to use it.>t----------<ND86>---------->x